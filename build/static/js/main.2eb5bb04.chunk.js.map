{"version":3,"sources":["components/StickyNavbar.js","formValidators.js","components/formElements/RenderField.js","components/formElements/RenderCheckBoxes.js","components/formElements/RenderRadio.js","components/AdvancedSearch.js","reducers/searchReducer.js","gitQueryFunctions.js","components/SearchPanel.js","components/LangCell.js","components/RepoRow.js","components/SortControl.js","components/PagerControl.js","components/ResultPanel.js","components/pages/SearchPage.js","components/pages/HistoryPage.js","components/App.js","reducers/historyReducer.js","reducers/loaderReducer.js","index.js"],"names":["StickyNavbar","props","searchType","useSelector","state","search","type","dispatch","useDispatch","Navbar","bg","variant","sticky","Brand","Nav","className","Container","fluid","Row","Col","onClick","window","open","location","origin","encodeURIComponent","Dropdown","DropdownButton","id","drop","title","Item","lengthMin","value","length","undefined","number","isNaN","Number","validateNumberInput","values","key","errors","numberFilled","errorNum","validateMaxNumberInput","minKey","maxFilled","parseInt","validateTextInput","oneFilled","errorMin","validateAdvancedForm","starsNumberFilled","sizeNumberFilled","searchValue","searchMin","name","description","readme","filter","validateLangTextInput","starCheck","starsMaxFilled","sizeCheck","sizeMaxFilled","isFilled","validateLastTextInput","RenderField","input","label","meta","touched","error","warning","placeholder","RenderCheckBoxes","submitting","Field","component","htmlFor","RenderRadio","AdvancedSearch","handleSubmit","reset","pristine","valid","onReset","onTypeToggle","starsCheckedVal","sizeCheckedVal","manualSearchFn","isLoading","searchFormData","form","simpleSearch","history","searchHistory","useState","isFetchStarted","setFetchStarted","useEffect","query","URLSearchParams","get","console","log","onSubmit","md","sm","Button","size","disabled","color","xs","lg","reduxForm","destroyOnUnmount","forceUnregisterOnUnmount","validate","selector","formValueSelector","connect","starCheckValFromState","sizeCheckValFromState","initialValues","change","initialState","repos","isloading","currPage","orderBy","sortBy","itemTransformer","item","full_name","html_url","stars","stargazers_count","forks","language","languages_url","owner","login","created_at","updated_at","owner_html_url","owner_avatar_url","avatar_url","searchReducer","action","total","payload","result","total_count","items","map","links","parseLinkHeader","last","lastPage","page","skipHistory","push","queryString","url","response","status","data","message","headers","limitRemain","limitUsed","currTime","Math","round","Date","getTime","resetTime","remainingSecs","errorType","Array","isArray","customErrorType","advancedSearchQuery","user","org","lang","topic","starsNumber","starsMax","sizeNumber","sizeMax","SearchPanel","handleAdvancedSubmit","advancedFormErrors","Object","keys","errorMessage","validationError","startSearch","searchClick","pageSize","searchInitState","showQuery","gitQueryString","alert","handleReset","initState","this","isError","Alert","React","Component","loadPage","orderByParam","sortByParam","encodedQueryString","axios","getApiSearchResults","then","config","catch","errorObj","typeChange","newType","LangCell","langUrl","langList","loader","idx","RepoRow","repo","href","target","alt","src","process","substring","width","keyProp","SortControl","totalResult","selectedValue","onChange","val","newUrl","replace","PagerControl","startPaging","pageType","newPage","first","event","prev","next","ResultPanel","spinningLoader","includeControls","repoIdx","HistoryPage","selectedItems","selectedIindex","selectedIndex","queryUrl","mapIdx","index","rows","maxLength","readOnly","rel","App","document","historyReducer","loaderReducer","reducers","formReducer","reducer","combineReducers","initForm","urlInitializedForm","initFormParam","initQuery","decodeURIComponent","trim","split","element","splittedElement","initializeFromUrl","store","createStore","historyInitState","loaderInitState","composeWithDevTools","applyMiddleware","thunk","render","getElementById"],"mappings":"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","file":"static/js/main.2eb5bb04.chunk.js","sourcesContent":["import { Navbar, Nav, Dropdown, DropdownButton, Col, Row, Container } from 'react-bootstrap'\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n/**\n * Component for navigation menus\n * @param {*} props \n */\n let StickyNavbar = (props) => {\n    const searchType = useSelector(state => state.search.type);\n    const dispatch = useDispatch();\n\n    /**\n     * Showing Creator reference page\n     */\n    const showCreator = () => {\n        window.open(window.location.origin+'/?query='+encodeURIComponent('user:fotoamg'),\n            'createdby','width=1200,height=600,scrollbars=yes,resizable=yes');\n    }\n\n    return ( <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\" >\n        <Navbar.Brand>Git Repo Search</Navbar.Brand>\n        <Nav className=\"mr-auto navbarOuter\">\n            <Container fluid className=\"horNavContainer\">\n                <Row className=\"horNavRow\">\n                    <Col className=\"horNavLinkCol\">\n                        <span className=\"creatorInfo\" onClick={showCreator}>&copy;reated by FotoAmg</span>\n                    </Col>\n                    <Col className=\"vertNavDropCol\">\n                        <Dropdown>\n                            <DropdownButton\n                                key=\"vertMenu\"\n                                id={`dropdown-button-drop-vert`}\n                                drop=\"left\"\n                                title=\" \" >\n                                { searchType === 'search' ?\n                                    <Dropdown.Item onClick={() => dispatch({ type: 'HISTORY_TYPE_NAV' })}>\n                                        <h3>History</h3>\n                                    </Dropdown.Item>\n                                    : \n                                    <Dropdown.Item onClick={() => dispatch({ type: 'SEARCH_TYPE_NAV' })}>\n                                        <h3>Search</h3>\n                                    </Dropdown.Item>\n                                }\n                            </DropdownButton>\n                        </Dropdown>\n                    </Col>\n                </Row>\n            </Container>\n        </Nav>\n    </Navbar>\n    )\n}\n\nexport default StickyNavbar;\n","\nconst required = (value) => value ? undefined : 'Required!'\n\nconst lengthMin = (value) =>\n    value && value.length > 2 ? undefined : `Must be at least 3 char.`\n\nconst number = value =>\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\n\n/**\n * Languages can be shorter than 3 character like 'C'...\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateLangTextInput = (values, key, errors, oneFilled) => {\n    if (values[key] && (values[key] !== \"\")) {\n        oneFilled = true;\n    }\n    return oneFilled;\n}\n\n/**\n * Validates number text input\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n */\nconst validateNumberInput = (values, key, errors) => {\n    let numberFilled = false;\n    if (values[key] && (values[key] !== \"\")) {\n        const errorNum = number(values[key]);\n        if (errorNum) {\n            errors[key] = errorNum;\n        } else {\n            numberFilled = true;\n        }\n    }\n    return numberFilled;\n}\n\n/**\n * Validates number imput which has a minvalue in an other form element\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} minKey min value form element key\n */\nconst validateMaxNumberInput = (values, key, errors, minKey) => {\n    let maxFilled = false;\n    if ( values[key] && (values[key] !== \"\")) {\n        // console.log('Max filled ' + key, values[key]);\n        const errorNum = number(values[key]);\n        if (errorNum) {\n            errors[key] = errorNum;\n        } else {\n            const minNum = Number.parseInt(values[minKey], 10);\n            const maxNum = Number.parseInt(values[key], 10);\n            if (!(minNum < maxNum)) {\n                errors[minKey] = 'Max should be greater number than Min'\n            } else {\n                maxFilled = true;\n            }\n        } \n    } else {\n        errors[minKey] = 'If Min filled, Max also needs to be filled';\n    }\n    return maxFilled;\n}\n\n/**\n * Validates a normal text input\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateTextInput = (values, key, errors, oneFilled) => {\n    if (values[key] && (values[key] !== \"\")) {\n        const errorMin = lengthMin(values[key]);\n        if (errorMin) {\n            errors[key] = errorMin;\n        } else {\n            oneFilled = true;\n        }\n    }\n    return oneFilled;\n}\n\n/**\n * Validates text input and if nothing filled yet writes error here,\n * as there is no way to show cross input errors, only field level errors.\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateLastTextInput = (values, key, errors, oneFilled) => {\n    const isFilled = validateTextInput(values, key, errors, oneFilled);\n    if (!isFilled && !errors[key]) {\n        errors[key] = 'Fill at least one search option!'\n    }\n    return isFilled;\n}\n\n/**\n * Validates the advanced search form\n * @param {*} values \n */\nconst validateAdvancedForm = values => {\n    const errors = {}\n    // console.log('Advanced validate....', values);\n    let oneFilled = false;\n    let starsNumberFilled = false;\n    let sizeNumberFilled = false;\n\n    if (values.searchValue && (values.searchValue !== \"\")) {\n        const searchMin = lengthMin(values.searchValue);\n        if (searchMin) {\n            errors.searchValue = searchMin\n        } else {\n            if (!values || !(values.name || values.description || values.readme)) {\n                // console.log('Checkbox group invalid! ');\n                errors.filter = 'Select at least one of the filters!';\n            } else {\n                oneFilled = true;\n            }\n        }\n    }\n\n    oneFilled =  oneFilled || validateTextInput(values, 'user', errors, oneFilled);\n    oneFilled =  oneFilled || validateLangTextInput(values, 'lang', errors, oneFilled);\n    oneFilled =  oneFilled || validateTextInput(values, 'topic', errors, oneFilled);\n    starsNumberFilled = validateNumberInput(values, 'starsNumber', errors);\n    oneFilled =  oneFilled || starsNumberFilled;\n    if (values.starCheck === 'between' && starsNumberFilled)  {\n        const starsMaxFilled = validateMaxNumberInput(values, 'starsMax', errors, 'starsNumber');\n        oneFilled = oneFilled || starsMaxFilled;\n    }\n    sizeNumberFilled = validateNumberInput(values, 'sizeNumber', errors);\n    oneFilled =  oneFilled || sizeNumberFilled;\n    if (values.sizeCheck === 'between' && sizeNumberFilled)  {\n        const sizeMaxFilled = validateMaxNumberInput(values, 'sizeMax', errors, 'sizeNumber');\n        oneFilled = oneFilled || sizeMaxFilled;\n    }\n    validateLastTextInput(values, 'org', errors, oneFilled);\n    // console.log(`starsNumberFilled:${starsNumberFilled} sizeNumberFilled:${sizeNumberFilled} Errors: `, errors);\n    return errors\n}\n\nexport { required, lengthMin, number, validateAdvancedForm };\n","import React from 'react';\n\n/**\n * General input field for redux form\n * @param {*} param0 \n */\nexport const RenderField = ({ className, input, label, type, meta: { touched, error, warning } }) => (\n    <span className={className}>\n        <input {...input} placeholder={label} type={type} />\n        <div className=\"inputErrorHolder\">\n            {touched && ((error && <span className=\"errorMsg\">{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n    </span>\n)","import React from 'react';\nimport { Field } from 'redux-form';\n\n/**\n * Custom checkbox group holder component for filter options\n * @param {*} param0 \n */\nexport const RenderCheckBoxes = ({ input, label, type, meta: { touched, error, warning, submitting } }) => {\n\n    return <div>\n        <div className=\"filterCell\">\n            <span> In: </span>\n            <span className=\"filterCheckItem\">\n                <Field name=\"name\" id=\"name\" component=\"input\" type=\"checkbox\" />\n                <label htmlFor=\"name\">name </label>\n            </span>\n\n            <span className=\"filterCheckItem\">\n                <Field name=\"description\" id=\"description\" component=\"input\" type=\"checkbox\" />\n                <label htmlFor=\"description\">description </label>\n            </span>\n\n            <span className=\"filterCheckItem\">\n                <Field name=\"readme\" id=\"readme\" component=\"input\" type=\"checkbox\" />\n                <label htmlFor=\"readme\">readme </label>\n            </span>\n        </div>\n        <div className=\"filterCellError\">\n            {((error && <span className=\"errorMsg\">{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n    </div>\n}","import React from 'react';\n\n/**\n * Radio field for redux form\n * @param {*} param0 \n */\nexport const RenderRadio = ({ id, input, label, type, meta: { touched, error, warning } }) => (\n    <span>\n        <input {...input} id={id} type={type} />\n        <label htmlFor={id}>{label}</label>\n    </span>\n)","import React, { useEffect, useState } from 'react';\nimport { Field, reduxForm, change, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Search, Share, StarFill, ArrowDownUp, ArrowCounterclockwise } from 'react-bootstrap-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { validateAdvancedForm } from '../formValidators';\nimport { RenderField } from './formElements/RenderField';\nimport { RenderCheckBoxes } from './formElements/RenderCheckBoxes';\nimport { RenderRadio } from './formElements/RenderRadio';\n\n/**\n * Component holding the advanced search form\n * @param {*} props \n */\nlet AdvancedSearch = (props) => {\n    const { handleSubmit, reset, submitting, pristine, valid, onReset, onTypeToggle, starsCheckedVal, sizeCheckedVal, manualSearchFn } = props;\n    const isLoading = useSelector(state => state.search.isLoading);\n    const searchFormData = useSelector(state => state.form.simpleSearch);\n    const history = useSelector(state => state.search.searchHistory);\n    const dispatch = useDispatch();\n    const [isFetchStarted, setFetchStarted] = useState(false);\n\n    useEffect(() => {\n        // console.log('Simple form: ', searchFormData, manualSearchFn );\n\n        if (!isFetchStarted && history.length < 1) {\n            const urlParams = new URLSearchParams(window.location.search);\n            const query = urlParams.get('query');\n            setFetchStarted(true);\n\n            //console.log('query', query);\n            if (query) {\n                console.log('Start fetching form: ', searchFormData );\n                console.log('Forms should have been parsed by a query!! ' + query);\n                // change('searchValue', paramSearchKey);\n                manualSearchFn({...searchFormData.values});\n            }\n        }\n    }, [ dispatch, history, isFetchStarted, searchFormData, manualSearchFn ]);\n\n    const onCombinedReset = (...args) => {\n        // console.log('reset args', args);\n        reset(...args);\n        onReset(...args);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Container fluid>\n                <Row className=\"simpleSearchRow\">\n                    <Col md={4} sm={12} className=\"searchCell searchByCell\">\n                        <label htmlFor=\"searchValue\">Search by: </label> \n                        <Field name=\"searchValue\" component={RenderField}\n                            type=\"text\" label=\"search by\" className='searchby'/>\n                    </Col>\n                    <Col md={6} sm={8}>\n                        <Field name=\"filter\" id=\"filter\" component={RenderCheckBoxes} type=\"checkbox\" />\n                    </Col>\n                    <Col md={2} sm={4} className=\"modToggleOuter\">\n                        <Button className=\"queryButton\" variant=\"primary\" size=\"sm\" type=\"submit\" disabled={submitting || !valid || isLoading}>\n                            {isLoading ? 'Loading' : (<Search color=\"white\" size={14}></Search>)}\n                        </Button>\n                        <Button className=\"queryButton\" variant=\"primary\" size=\"sm\" type=\"button\" disabled={submitting || isLoading || pristine}\n                            onClick={onCombinedReset}>\n                                <ArrowCounterclockwise size={14}></ArrowCounterclockwise>\n                        </Button>\n                        <Button className=\"queryButton\" variant=\"primary\" size=\"sm\"\n                            disabled={submitting || !valid || isLoading} onClick={onTypeToggle}>\n                            <Share size={14}></Share>\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className=\"simpleSearchRow\">\n                    <Col md={3} xs={6} className=\"searchCell\">\n                        <label htmlFor=\"user\">User: </label>\n                        <Field name=\"user\" component={RenderField}\n                            type=\"text\" label=\"user name\" />\n                    </Col>\n                    <Col md={3} xs={6} className=\"searchCell\">\n                        <label htmlFor=\"org\">Org.: </label>\n                        <Field name=\"org\" component={RenderField}\n                            type=\"text\" label=\"organization\" />\n                    </Col>\n                    <Col md={3} xs={6} className=\"searchCell\">\n                            <label htmlFor=\"lang\">Lang.: </label>\n                            <Field name=\"lang\" component={RenderField}\n                                type=\"text\" label=\"language\" />\n                     </Col>\n                    <Col md={3} xs={6} className=\"searchCell\">\n                           <label htmlFor=\"topic\">Topic: </label>\n                            <Field name=\"topic\" component={RenderField}\n                                type=\"text\" label=\"topic\" />\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col xs lg={6} className=\"starsFilterOuter\">\n                        <span className=\"starsFilter\">\n                            <StarFill color=\"yellow\" size={12}></StarFill>\n                            <span className=\"starsMainLabel\">Stars</span>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"equal\"\n                                id=\"starCheckEqual\"\n                                type=\"radio\"\n                                label=\"equal\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"greater\"\n                                id=\"starCheckgreat\"\n                                type=\"radio\"\n                                label=\"greater than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"less\"\n                                id=\"starCheckLess\"\n                                type=\"radio\"\n                                label=\"less than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"between\"\n                                id=\"starCheckBetween\"\n                                type=\"radio\"\n                                label=\"between\"\n                            >\n                            </Field>\n                            <span className=\"starsFilterNumberRow\">\n                                <label htmlFor=\"starsNumber\">{starsCheckedVal === 'between' ? 'Min: ' : 'Number: '} </label>\n                                <Field name=\"starsNumber\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                                <label className={starsCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    htmlFor=\"starsMax\">\n                                    Max:\n                                </label>\n                                <Field className={starsCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    name=\"starsMax\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                            </span>\n                        </span>\n                    </Col>\n                    <Col xs lg={6} className=\"sizeFilterOuter\">\n                        <span className=\"sizeFilter\">\n                            <ArrowDownUp color=\"lightblue\" size={12}></ArrowDownUp>\n                            <span className=\"sizeMainLabel\">Size</span>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"equal\"\n                                id=\"sizeCheckEqual\"\n                                type=\"radio\"\n                                label=\"equal\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"greater\"\n                                id=\"sizeCheckgreat\"\n                                type=\"radio\"\n                                label=\"greater than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"less\"\n                                id=\"sizeCheckLess\"\n                                type=\"radio\"\n                                label=\"less than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"between\"\n                                id=\"sizeCheckBetween\"\n                                type=\"radio\"\n                                label=\"between\"\n                            >\n                            </Field>\n                            <span className=\"sizeFilterNumberRow\">\n                                <label htmlFor=\"sizeNumber\">{sizeCheckedVal === 'between' ? 'Min: ' : 'Number: '} </label>\n                                <Field name=\"sizeNumber\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                                <label className={sizeCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    htmlFor=\"sizeMax\">\n                                    Max:\n                                </label>\n                                <Field className={sizeCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    name=\"sizeMax\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                            </span>\n                        </span>\n                    </Col>\n                    </Row>\n            </Container>\n        </form>\n    )\n\n}\n\n// Decorate the form component\nAdvancedSearch = reduxForm({\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: false,\n    // enableReinitialize: true, // enable if want to kill your PC !!!\n    form: 'simpleSearch', // a unique name for this form\n    validate: validateAdvancedForm\n})(AdvancedSearch);\n\nconst selector = formValueSelector('simpleSearch') // <-- same as form name\nAdvancedSearch = connect(\n    state => {\n        const starCheckValFromState = selector(state, 'starCheck');\n        const sizeCheckValFromState = selector(state, 'sizeCheck');\n        return {\n            initialValues: state.form.simpleSearch,\n            starsCheckedVal: starCheckValFromState,\n            sizeCheckedVal: sizeCheckValFromState,\n        }\n    }, (dispatch) => {\n        return { change: change }\n    }\n)(AdvancedSearch)\n\nexport default AdvancedSearch;\n","import parseLinkHeader from 'parse-link-header';\n\n/**\n * Initial state for the search state\n */\nexport const initialState = {\n    repos: [],\n    isloading: false,\n    searchHistory: [],\n    currPage: 1,\n    orderBy: 'desc',\n    sortBy: 'stars',\n    type: 'search'\n};\n\n/**\n * Helper function to shorten and flatten repo values stored in state.\n*/\nconst itemTransformer = (item) => {\n    return {\n        name: item.name,\n        full_name: item.full_name,\n        html_url: item.html_url,\n        stars: item.stargazers_count,\n        forks: item.forks,\n        /*issues: item.open_issues_count,*/\n        language: item.language,\n        languages_url: item.languages_url,\n        owner: item.owner.login,\n        description: item.description,\n        created_at: item.created_at,\n        updated_at: item.updated_at,\n        owner_html_url: item.owner.html_url,\n        owner_avatar_url: item.owner.avatar_url\n    };\n};\n\n/**\n * Search reducer handling all general actions around search logic\n * @param {*} state \n * @param {*} action \n */\nconst searchReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"SEARCH_START\":\n            // console.log(\"SEARCH START reducer\");\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            break;\n        case \"SEARCH_FINISHED\":\n            // console.log(\"SEARCH FINISHED reducer\", action.payload);\n            /*console.groupCollapsed('%crepo items', 'background-color: transparent;font-size:20px; background: #222; color: #bada55');\n            console.table(action.payload.result.items.map((item) => {\n                return {\n                    name: item.name,\n                    full_name: item.full_name,\n                    stars: item.stargazers_count,\n                    watchers: item.watchers,\n                    forks: item.forks,\n                    issues: item.open_issues_count,\n                    lang: item.language,\n                    owner: item.owner.login,\n                    description: item.description,\n                    html_url: item.html_url\n                }\n            }).reduce((acc, { name, ...x }) => { acc[name] = x; return acc; }, {}));\n            console.groupEnd();*/\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            const repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.repos = repos;\n            state.currPage = action.payload.currPage || initialState.currPage;\n            state.orderBy = action.payload.orderBy || initialState.orderBy;\n            state.sortBy = action.payload.sortBy || initialState.sortBy;\n            state.links = parseLinkHeader(action.payload.links);\n            if (state.links && state.links.last) {\n                state.lastPage = state.links.last.page;\n            } else {\n                state.lastPage = state.currPage;\n            }\n            state.searchHistory = [...state.searchHistory];\n            if (!action.payload.skipHistory) {\n                state.searchHistory.push({\n                    queryString: action.payload.queryString,\n                    repos: repos\n                });\n            }\n            state.isLoading = false;\n\n            state.url = action.payload.url;\n            break;\n        case \"SEARCH_ERROR\":\n            // console.log(\"SEARCH ERROR reducer\");\n            state = { ...state };\n            state.isLoading = false;\n            state.error = {};\n            if (action.payload.error && action.payload.error.response\n                && action.payload.error.response.status === 403) {\n                // console.log('Search Error Response', action.payload.error.response);\n                if (action.payload.error.response.data.message) {\n                    state.error.message = action.payload.error.response.data.message;\n                }\n                if (action.payload.error.response.headers['x-ratelimit-used']) {\n                    state.error.limitRemain = ' Limit remaining: ' + action.payload.error.response.headers['x-ratelimit-remaining'] + ' ';\n                    state.error.limitUsed = ' Limit used: ' + action.payload.error.response.headers['x-ratelimit-used'] + ' ';\n                    const currTime = Math.round((new Date()).getTime() / 1000);\n                    const resetTime = Number.parseInt(action.payload.error.response.headers['x-ratelimit-reset'], 10);\n                    // // console.log('Current time :' + currTime);\n                    // // console.log('Reset time :' + resetTime);\n                    state.error.remainingSecs = '  Please wait for ' + (resetTime - currTime) + ' seconds. ';\n                }\n            } else if (action.payload.error && action.payload.error.response\n                && action.payload.error.response.status === 422) {\n                // console.log('Search Error Response 422', action.payload.error.response);\n                if (action.payload.error.response.data.message) {\n                    state.error.errorType = action.payload.error.response.data.message;\n                }\n                if (action.payload.error.response.data.errors &&\n                    Array.isArray(action.payload.error.response.data.errors) &&\n                    action.payload.error.response.data.errors.length > 0 &&\n                    action.payload.error.response.data.errors[0] &&\n                    action.payload.error.response.data.errors[0].message) {\n                    state.error.message = action.payload.error.response.data.errors[0].message\n                }\n            } else {\n                if (action.payload.error && action.payload.error.message) {\n                    state.error.message = action.payload.error.message;\n                }\n            }\n\n            state.error.errorType = state.error.errorType || action.payload.customErrorType || 'Error loading data:';\n\n            break;\n        case \"SORTORDER_START\":\n            // console.log(\"SORTORDER START reducer\", action.payload);\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            if (action.payload.orderBy) {\n                state.orderBy = action.payload.orderBy;\n            }\n            if (action.payload.sortBy) {\n                state.sortBy = action.payload.sortBy;\n            }\n            break;\n        case \"SORTORDER_FINISHED\":\n            // console.log(\"SORTORDER FINISHED reducer\", action.payload);\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            state.repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.links = parseLinkHeader(action.payload.links);\n            state.searchHistory = [...state.searchHistory];\n            state.isLoading = false;\n            state.url = action.payload.url;\n            break;\n        case \"PAGER_START\":\n            // console.log(\"PAGER START reducer\", action.payload);\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            break;\n        case \"PAGER_FINISHED\":\n            // console.log(\"PAGER FINISHED reducer\", action.payload);\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            state.repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.links = parseLinkHeader(action.payload.links);\n            state.searchHistory = [...state.searchHistory];\n            state.isLoading = false;\n            state.url = action.payload.url;\n            if (action.payload.currPage) {\n                state.currPage = action.payload.currPage\n            }\n            break;\n        case \"INIT_STATE\":\n            // console.log(\"INIT_STATE reducer\", action.payload);\n            state = { ...state, repos: [] };\n            break;\n        case \"TYPE_TOGGLE\":\n            // console.log(\"TYPE_TOGGLE reducer\", action.payload);\n            state = { ...state };\n            state.type = action.payload.type || initialState.type;\n            break;\n        case \"SEARCH_TYPE_NAV\":\n            state = { ...state };\n            state.type = 'search';\n            break;\n        case \"HISTORY_TYPE_NAV\":\n            state = { ...state };\n            state.type = 'history';\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n\n    }\n    return state;\n};\n\nexport default searchReducer;\n","import axios from 'axios';\n\n/**\n * Loads search result form Git API.\n * @param {*} simpleQueryString \n * @param {*} pageSize \n * @param {*} currPage \n * @param {*} orderBy \n * @param {*} sortBy \n * \n * @returns Promise of Axios call\n */\nconst getApiSearchResults = (encodedQueryString, pageSize, currPage, orderBy, sortBy) => {\n    const url = `https://api.github.com/search/repositories?q=${encodedQueryString}&page=${currPage}&per_page=${pageSize}&sort=${sortBy}&order=${orderBy}`;\n    return axios.get(url)\n};\n\n/**\n * Generates query string for advanced search form\n * @param {*} form \n */\nconst advancedSearchQuery = (form) => {\n    let result = '';\n\n    if (form.searchValue && form.searchValue.length > 2) {\n        result += `${form.searchValue}${form.name ? ' in:name' : ''}${form.description ? ' in:description' : ''}${form.readme ? ' in:readme' : ''}`;\n    }\n\n    if (form.user && form.user.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `user:${form.user}`;\n    }\n\n    if (form.org && form.org.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `org:${form.org}`;\n    }\n\n    if (form.lang && form.lang.length > 0) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `language:${form.lang}`;\n    }\n\n    if (form.topic && form.topic.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `topic:${form.topic}`;\n    }\n\n    if (form.starCheck && form.starsNumber && form.starsNumber.length > 0 && !isNaN(Number(form.starsNumber))) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        if (form.starCheck === 'equal') {\n            result += `stars:${form.starsNumber}`;\n        } else if (form.starCheck === 'greater') {\n            result += `stars:>${form.starsNumber}`;\n        } else if (form.starCheck === 'less') {\n            result += `stars:<${form.starsNumber}`;\n        } else if (form.starCheck === 'between' &&\n            form.starsMax && form.starsMax.length > 0 && !isNaN(Number(form.starsMax))) {\n            result += `stars:${form.starsNumber}..${form.starsMax}`;\n        }\n    }\n\n    if (form.sizeCheck && form.sizeNumber && form.sizeNumber.length > 0 && !isNaN(Number(form.sizeNumber))) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        if (form.sizeCheck === 'equal') {\n            result += `size:${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'greater') {\n            result += `size:>${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'less') {\n            result += `size:<${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'between' &&\n            form.sizeMax && form.sizeMax.length > 0 && !isNaN(Number(form.sizeMax))) {\n            result += `size:${form.sizeNumber}..${form.sizeMax}`;\n        }\n    }\n\n    return result;\n}\n\nconst initializeFromUrl = (initFormParam) => {\n    const initForm = {...initFormParam } || {};\n    const urlParams = new URLSearchParams(window.location.search);\n    const initQuery = urlParams.get('query');\n    // console.log('initQuery url param query', initQuery );\n    if (initQuery) {\n        for(const element of decodeURIComponent(initQuery).trim().split(' ')) {\n            // console.log('Processing element: ' + element);\n            const splittedElement = element.split(':');\n            if (splittedElement.length === 1) {\n                initForm.searchValue = element;\n            } else if (splittedElement.length === 2) {\n                if (splittedElement[0] === 'user') {\n                    initForm.user = splittedElement[1];\n                } else if (splittedElement[0] === 'org') {\n                    initForm.org = splittedElement[1];\n                } else if (splittedElement[0] === 'language') {\n                    initForm.lang = splittedElement[1];\n                } else if (splittedElement[0] === 'topic') {\n                    initForm.topic = splittedElement[1];\n                } else if (splittedElement[0] === 'in') {\n                    initForm[splittedElement[1]] = true;\n                    // console.log(splittedElement[1] + ' is set to true!') \n                }\n            }\n      \n        }\n    }\n    return initForm;\n}\n\nexport { getApiSearchResults, advancedSearchQuery, initializeFromUrl };\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AdvancedSearch from './AdvancedSearch';\nimport { initialState as searchInitState } from '../reducers/searchReducer';\nimport { getApiSearchResults, advancedSearchQuery } from '../gitQueryFunctions';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport { validateAdvancedForm } from '../formValidators';\n\n/**\n * Component holding the search panel.\n * Class component just to show the old way before hooks getting popular.\n */\nclass SearchPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // // console.log(\"props:\", props);\n        this.pageSize = props.pageSize || 10;\n        this.currPage = props.currPage || searchInitState.currPage;\n        this.sortBy = props.sortBy || searchInitState.sortBy;\n        this.orderBy = props.orderBy || searchInitState.orderBy;\n        this.type = props.type || searchInitState.type;\n    }\n\n    /**\n     * Advanced form submit funcion\n     * @param {*} form \n     */\n    handleAdvancedSubmit = (form) => {\n        // console.log('Advanced search submit page_size: ' + this.pageSize);\n        const advancedFormErrors = validateAdvancedForm(form);\n        // console.log('errors in advanced form: ', advancedFormErrors);\n        if (Object.keys(advancedFormErrors).length !== 0) {\n            // this should never happen, but REDUX FORM sometimes just not runs VALIDATION after RESET button...\n            // console.log('%cMissing required value!', 'font-size:20px; background: #BBB; color: red', form);\n            const errorMessage = advancedFormErrors[Object.keys(advancedFormErrors)[0]];\n            this.props.validationError(errorMessage);\n            return false;\n        }\n        this.props.startSearch();\n        // we need to load first page by search setting to default sort/order IMHO\n        this.props.searchClick(form,\n            this.pageSize,\n            searchInitState.currPage,\n            searchInitState.orderBy,\n            searchInitState.sortBy);\n    }\n\n    /**\n     * Showing Query\n     */\n     showQuery = () => {\n        const gitQueryString = advancedSearchQuery(this.props.form.values);\n        /* console.log('query values: ' + gitQueryString);\n        window.open('http://localhost:3000/?query='+encodeURIComponent(gitQueryString),\n            'popup','width=1200,height=600,scrollbars=no,resizable=no');\n        console.log('Encoded query values: ' + encodeURIComponent(gitQueryString));*/\n        alert(window.location.origin+'/?query='+encodeURIComponent(gitQueryString));\n    }\n\n    /**\n     * Reseting form should reset results,\n     * so we call it here.\n     * @param {*} form \n     */\n    handleReset = (form) => {\n        // console.log('RESET CLICK!', form);\n        this.props.initState();\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row className='searchContainer'>\n                    <Col>\n                        <AdvancedSearch onSubmit={this.handleAdvancedSubmit} onReset={this.handleReset}\n                            onTypeToggle={this.showQuery} manualSearchFn={this.handleAdvancedSubmit}/>\n                    </Col>\n                </Row>\n                {this.props.isError ? (<Row>\n                    <Col>\n                        <Alert variant=\"danger\">\n                            {this.props.isError.errorType} <strong>{this.props.isError.message}</strong><br />\n                            {this.props.isError.limitRemain}\n                            {this.props.isError.limitUsed}\n                            {this.props.isError.remainingSecs}\n                        </Alert>\n                    </Col>\n                </Row>) : ('')}\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orderBy: state.search.orderBy,\n        sortBy: state.search.sortBy,\n        currPage: state.search.currPage,\n        isError: state.search.error,\n        type: state.search.type,\n        form: state.form.simpleSearch\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchClick: (form, pageSize, loadPage, orderByParam, sortByParam) => {\n            // console.log(\"searchForm, isAdvanced: \" + isAdvanced, form);\n            const gitQueryString = advancedSearchQuery(form);\n            const encodedQuery = encodeURIComponent(gitQueryString);\n            // console.log('gitQueryString', gitQueryString);\n            return getApiSearchResults(encodedQuery, pageSize, loadPage, orderByParam, sortByParam).then(response => {\n                // console.log('SEARCH result', response);\n                if (response.status === 200) {\n                    // console.log('Pagination Links: ' + response.headers['link']);\n                    dispatch({\n                        type: \"SEARCH_FINISHED\",\n                        payload: {\n                            result: response.data,\n                            links: response.headers['link'],\n                            queryString: gitQueryString,\n                            currPage: loadPage,\n                            sortBy: sortByParam,\n                            orderBy: orderByParam,\n                            url: response.config.url\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: \"SEARCH_ERROR\",\n                        payload: {}\n                    })\n                }\n            }).catch(function (errorObj) {\n                // console.log('Error in search promise', errorObj);\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: { error: /*JSON.stringify(errorObj)*/ errorObj }\n                });\n            });\n        },\n        initState: () => {\n            // console.log(\"SearchForm initState\");\n            dispatch({\n                type: \"INIT_STATE\",\n                payload: {}\n            });\n        },\n        validationError: (errorMessage) => {\n            // console.log(\"Validation error\");\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { \n                    customErrorType: 'Form validation error: ',\n                    error: { message: errorMessage}\n                } \n            });\n        },\n        typeChange: (newType) => {\n            // console.log(\" Search type chage to: \" + newType);\n            dispatch({\n                type: \"TYPE_TOGGLE\",\n                payload: { type: newType }\n            });\n        },\n        startSearch: () => dispatch({\n            type: \"SEARCH_START\",\n            payload: {}\n        })\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel);","import React, { useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component to show the language or fetch languages from API.\n * If fetched it should come from the loader state cache.\n * @param {*} props \n */\nfunction LangCell(props) {\n    const { language, langUrl } = props;\n    const langList = useSelector(state => state.loader[langUrl]);\n    const dispatch = useDispatch();\n    /**\n     * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n     * TODO: set it back to false if set to true !!!!\n     * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n     */\n    // eslint-disable-next-line\n    const [isFetchStarted, setFetchStarted] = useState(true);\n\n    useEffect(() => {\n        if (!langList && !isFetchStarted) {\n            setFetchStarted(true);\n            // console.log('Start fetching: ' + langUrl);\n            axios.get(langUrl).then(response => {\n                // console.log('langUrl result', response);\n                if (response.status === 200) {\n                    dispatch({\n                        type: \"URL_FETCHED\",\n                        payload: {\n                            data: response.data,\n                            url: langUrl\n                        }\n                    })\n                } else {\n                    // console.log('Error lang fetch!');\n                    // setTimeout(() =>{setFetchStarted(false);}, 1500+(Math.random() * (response.status) +1));\n                }\n            }).catch(function (errorObj) {\n                // console.log('Error in lang fetch', errorObj);\n                // setTimeout(() =>{setFetchStarted(false);}, 1000+(Math.random() * (500) +1));\n            });\n        }\n    }, [ dispatch, isFetchStarted, langList, langUrl])\n\n\n    return <Col className=\"repoColLangs\" xs={1}>\n        {!langList ? <Button variant=\"secondary\" size=\"sm\" disabled={true}>{language}</Button> : ''} \n        {(langList || []).map((lang, idx) => (\n            <Button variant=\"secondary\" key={idx} size=\"sm\" disabled={true}>{lang}</Button>\n        ))}\n    </Col>\n\n}\n\nexport default LangCell;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport LangCell from './LangCell';\nimport { Stars, Calendar, CalendarWeek } from 'react-bootstrap-icons';\n\n/**\n * Component for rendering a result repo item\n * @param {*} props \n */\nfunction RepoRow(props) {\n    return <Row className=\"repoRow\" key={props.keyProp}>\n        <Col className=\"repoColName\" xs={3}>\n            <div title={props.repo.name}>{props.repo.name}</div>\n            <a href={props.repo.html_url} target=\"blank\"><div title={props.repo.full_name} className=\"repoFullName\">{props.repo.full_name}</div></a>\n        </Col>\n\n        <Col className=\"repoColMeta\" xs={1}>\n            <div title=\"stars\"><Stars size={16}></Stars> {props.repo.stars}</div>\n            <div title=\"forks\"><img alt=\"\" src={process.env.PUBLIC_URL +'/iconfinder_github-fork_83308.png'}></img> {props.repo.forks}</div>\n        </Col>\n\n\n        <Col className=\"repoColDesc\" xs={3}>\n            <p title={props.repo.description}>{props.repo.description}</p>\n        </Col>\n\n        <LangCell language={props.repo.language} langUrl={props.repo.languages_url}></LangCell>\n\n        <Col className=\"repoColDates\" xs={2}>\n            <div title=\"created at\"><Calendar size={16}></Calendar> {props.repo.created_at.substring(0, 10)}</div>\n            <div title=\"updated at\"><CalendarWeek size={16}></CalendarWeek> {props.repo.updated_at.substring(0, 10)}</div>\n        </Col>\n\n        <Col className=\"repoCol\" xs={1}>\n            By: {props.repo.owner}\n        </Col>\n\n        <Col className=\"repoColImg\" xs={1}>\n            <a href={props.repo.owner_html_url} target=\"blank\"><img alt={props.repo.owner} src={props.repo.owner_avatar_url} width=\"30px\"></img></a>\n        </Col>\n\n    </Row>\n}\n\nexport default RepoRow;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { RadioGroup, Radio } from 'react-radio-group'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\n\n/**\n * Component for the Sort/Order controls\n * @param {*} props \n */\nfunction SortControl(props) {\n    const totalResult = useSelector(state => state.search.total);\n    const orderBy = useSelector(state => state.search.orderBy);\n    const sortBy = useSelector(state => state.search.sortBy);\n    const url = useSelector(state => state.search.url);\n    const dispatch = useDispatch();\n\n    const sortChanged = (val) => {\n        // console.log('sortByChg', val);\n        dispatch({\n            type: \"SORTORDER_START\",\n            payload: { sortBy: val }\n        })\n        const newUrl = url.replace('&sort='+sortBy, '&sort='+val);\n        axios.get(newUrl).then(response => {\n            // console.log('SORT result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"SORTORDER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj }\n            });\n        });\n        return true;\n    };\n\n    const orderChanged = (val) => {\n        // console.log('orderByChg', val);\n        dispatch({\n            type: \"SORTORDER_START\",\n            payload: { orderBy: val }\n        })\n        const newUrl = url.replace('&order='+orderBy, '&order='+val);\n        axios.get(newUrl).then(response => {\n            // console.log('ORDER result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"SORTORDER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj }\n            });\n        });\n        return true;\n    };\n\n    return <Row className=\"sortOrderRow\">\n        <Col className=\"sortByCol\">\n            Sort by:\n            <RadioGroup name=\"sortBy\" selectedValue={sortBy} onChange={sortChanged}>\n                <Radio id=\"stars\" name=\"stars\" value=\"stars\" />\n                <label htmlFor=\"stars\">stars </label>\n                <Radio id=\"forks\" name=\"forks\" value=\"forks\" />\n                <label htmlFor=\"forks\">forks </label>\n            </RadioGroup>\n        </Col>\n        <Col className=\"orderByCol\">\n            Order by:\n            <RadioGroup name=\"orderBy\" selectedValue={orderBy} onChange={orderChanged}>\n                <Radio id=\"desc\" name=\"desc\" value=\"desc\" />\n                <label htmlFor=\"desc\">desc </label>\n                <Radio id=\"asc\" name=\"asc\" value=\"asc\" />\n                <label htmlFor=\"asc\">asc </label>\n            </RadioGroup>\n        </Col>\n        <Col className=\"totalResultCol\">\n            Total results: {totalResult}\n        </Col>\n    </Row>;\n\n}\n\nexport default SortControl;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChevronBarLeft, ChevronLeft, ChevronRight, ChevronBarRight } from 'react-bootstrap-icons';\nimport axios from 'axios';\n\n/**\n * Component for pagination\n * @param {*} props \n */\nfunction PagerControl(props) {\n    const currPage = useSelector(state => state.search.currPage);\n    const lastPage = useSelector(state => state.search.lastPage || currPage);\n    const links = useSelector(state => state.search.links || []);\n    const dispatch = useDispatch();\n\n    const startPaging = (pageType) => {\n        // console.log('Loading page: ' + pageType);\n        const newUrl = links[pageType].url + '';\n        const newPage = links[pageType].page + '';\n        dispatch({\n            type: \"PAGER_START\",\n            payload: {}\n        })\n        axios.get(newUrl).then(response => {\n            // console.log('PAGER result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"PAGER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url,\n                        currPage: newPage\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj}\n            });\n        });\n        return true;\n    }\n\n    const onNextClicked = (event) => {\n        startPaging('next');\n    }\n\n    const onPrevClicked = (event) => {\n        startPaging('prev');\n    }\n\n    const onFirstClicked = (event) => {\n        startPaging('first');\n    }\n\n    const onLastClicked = (event) => {\n        startPaging('last');\n    }\n\n    return <Row className=\"pagerRow\">\n        <Col>\n        </Col>\n        <Col className=\"totalResultCol\">\n            <span className=\"totalResultCurrent\"> Current page: {currPage} of {lastPage} </span>\n            {links.first ? <span className=\"pagerButton\" onClick={onFirstClicked}>\n                <ChevronBarLeft color=\"white\" size={16}></ChevronBarLeft>\n                <br />\n                First\n            </span> : ''}\n            {links.prev ? <span className=\"pagerButton\" onClick={onPrevClicked}>\n                <ChevronLeft color=\"white\" size={16}></ChevronLeft>\n                <br />\n                Prev\n            </span> : ''}\n            {links.next ? <span className=\"pagerButton\" onClick={onNextClicked}>\n                <ChevronRight color=\"white\" size={16}></ChevronRight>\n                <br />\n                Next\n            </span> : ''}\n            {links.last ? <span className=\"pagerButton\" onClick={onLastClicked}>\n                <ChevronBarRight color=\"white\" size={16}></ChevronBarRight>\n                <br />\n                Last\n            </span> : ''}\n        </Col>\n    </Row>;\n\n}\n\nexport default PagerControl;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport RepoRow from './RepoRow';\nimport SortControl from './SortControl';\nimport PagerControl from './PagerControl';\n\n/**\n * Component for result panel.\n * \n * Reusable to also display data from history\n * as gets the data from props.repos, not from state directly.\n * \n * If props.includeControls property is true it show the controls.\n * \n * @param {*} props\n */\nfunction ResultPanel(props) {\n    const isLoading = useSelector(state => state.search.isLoading);\n\n    const renderItems = () => (!props.repos || props.repos.length === 0) ? (\n        <div className=\"emptyResult\">\n            Search results are coming here\n        </div>\n    ) : <Container fluid className=\"repoList\">\n            {props.includeControls ? <SortControl></SortControl> : ''}\n            {props.repos.map((repo, repoIdx) => (\n                <RepoRow repo={repo} key={repoIdx} keyProp={repoIdx}></RepoRow>\n            ))}\n            {props.includeControls ? <PagerControl></PagerControl> : ''}\n        </Container>;\n\n    const spinningLoader = <div className=\"spinningLoader\"></div>\n\n    return <Container fluid>\n        <Row>\n            <Col className=\"resultCol justify-content-md-center\">\n                {isLoading ? spinningLoader : renderItems()}\n            </Col>\n        </Row>\n    </Container>\n}\n\nexport default (ResultPanel);","import { connect } from \"react-redux\";\nimport SearchPanel from '../SearchPanel';\nimport ResultPanel from '../ResultPanel';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n\n/**\n * Search page component holding search panel,\n * result panel and some error message containers.\n * \n * Paging size can be configured here for search panel.\n * @param {*} props \n */\nfunction SearchPage(props) {\n    return <Container className=\"container\" fluid>\n        <Row>\n            <Col>\n                <SearchPanel pageSize={8}></SearchPanel>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ResultPanel repos={props.repos || []} includeControls={true}></ResultPanel>\n            </Col>\n        </Row>\n        {props.isError ? (<Row>\n            <Col>\n                <Alert variant=\"danger\">\n                    {props.isError.errorType} <strong>{props.isError.message}</strong><br />\n                </Alert>\n            </Col>\n        </Row>) : ('')}\n    </Container>;\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        repos: state.search.repos,\n        isError: state.search.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ResultPanel from '../ResultPanel';\n\n/**\n * History page coponent\n * @param {*} props \n */\nconst HistoryPage = (props) => {\n    const history = useSelector(state => state.search.searchHistory);\n    const selectedItems = useSelector(state => state.history.items);\n    const selectedIindex = useSelector(state => state.history.selectedIndex);\n    const queryUrl = useSelector(state => {\n        // console.log('state.history.selectedIndex', state.history.selectedIndex)\n        return state.history.selectedIndex >= 0 ? window.location.origin + \"/?query=\" +\n            encodeURIComponent(state.search.searchHistory[state.history.selectedIndex].queryString) :  '';\n        });\n    const dispatch = useDispatch();\n\n    return <div>\n        <Container className=\"historyContainer\" fluid>\n            <Row className=\"historyContainerRow\">\n                <Col className=\"historyLeft\" xs={2}>\n                    <div className=\"historyTotalReq\">\n                        Total requests: {history.length}\n                    </div>\n                    {history.map((item, mapIdx) => (\n                        <span key={mapIdx} className={mapIdx === selectedIindex ? 'historyItemSelected' : 'historyItem'}\n                            onClick={(event) => {\n                                // // console.log('click', event);\n                                dispatch({\n                                    type: 'HISTORY_SELECT',\n                                    payload: {\n                                        index: mapIdx,\n                                        items: item.repos\n                                    }\n                                });\n                                return true;\n                            }} >\n                            <textarea rows={5} maxLength={900} disabled={false} readOnly\n                                value={item.queryString}></textarea>\n                        </span>\n                    ))}\n                    <br />\n                </Col>\n                <Col className=\"historyRight\" xs={10}>\n                    <div className=\"historyQuery\"> { selectedIindex >=0 ? ' Query link:' : '<- Select from the list! '}  \n                        <a href={queryUrl} target=\"_blank\" rel=\"noreferrer\"> {queryUrl} </a></div>\n                    <ResultPanel repos={selectedItems || []} includeControls={false}></ResultPanel>\n                </Col>\n            </Row>\n        </Container>\n    </div>;\n}\n\nexport default HistoryPage;\n\n","import React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport StickyNavbar from './StickyNavbar';\nimport SearchPage from './pages/SearchPage';\nimport HistoryPage from './pages/HistoryPage';\n\n\n/**\n * Main component holding the router and navbar\n * @param {*} props \n */\nfunction App(props) {\n  const searchType = useSelector(state => state.search.type);\n  useEffect(() => {\n    document.title = \"Git Repo Search App\"\n }, []);\n\n  return (\n    <div>\n      <StickyNavbar></StickyNavbar>\n      <div className=\"mainContainer\">\n      { searchType === 'search' ?\n        <SearchPage/> : <HistoryPage/> }\n      </div>\n    </div>\n  )\n};\n\nexport default App;\n","/**\n * Inital state for history data\n */\nexport const initialState = { items: [], selectedIndex: -1 };\n\n/**\n * Reducer handling history item selection\n * @param {*} state \n * @param {*} action \n */\nconst historyReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"HISTORY_SELECT\":\n            // console.log(\"HISTORY_SELECT reducer\", action.payload );\n            state = { ...state };\n            state.items = action.payload.items;\n            state.selectedIndex = action.payload.index;\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n\n    }\n    return state;\n};\n\nexport default historyReducer;\n","export const initialState = {};\n\n/**\n * Reducer to cache URL calls for languages list,\n * but could be used for general caching too.\n * @param {*} state \n * @param {*} action \n */\nconst loaderReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"URL_FETCHED\":\n            // console.log(\"URL_FETCHED\", action.payload.url, action.payload.data);\n            state = { ...state };\n            state[action.payload.url] = Object.keys(action.payload.data);\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n    }\n    return state;\n};\n\nexport default loaderReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport searchReducer, { initialState as searchInitState } from './reducers/searchReducer';\nimport historyReducer, { initialState as historyInitState } from './reducers/historyReducer';\nimport loaderReducer, { initialState as loaderInitState } from './reducers/loaderReducer';\nimport { initializeFromUrl } from './gitQueryFunctions';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/main.css';\n// import reportWebVitals from './reportWebVitals';\n\nconst reducers = {\n  search: searchReducer,\n  history: historyReducer,\n  loader: loaderReducer,\n  form: formReducer\n}\n\nconst reducer = combineReducers(reducers);\n\nexport const initForm = {\n  searchValue: '',\n  user: '',\n  org: '',\n  lang: '',\n  topic: '',\n  name: true,\n  description: false,\n  readme: false,\n  starCheck: 'greater',\n  starsNumber: '',\n  sizeCheck: 'greater',\n  sizeNumber: ''\n};\n\nconst urlInitializedForm = initializeFromUrl(initForm);\n\nconst store = createStore(reducer, {\n  search: searchInitState,\n  history: historyInitState,\n  loader: loaderInitState,\n  form: {\n    /**\n     * Search form initial state here,\n     * as it has its own reducer.\n     */\n    simpleSearch: {...urlInitializedForm}\n  }\n}, composeWithDevTools(applyMiddleware(thunk))\n);\n\nrender(<Provider store={store}>\n  <App />\n</Provider>\n  , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(// console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}